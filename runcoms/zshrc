#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Powerlevel10k theme configuration
DEFAULT_USER=$USER
POWERLEVEL9K_MODE='nerdfont-complete'
POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND='black'
POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND='blue'
POWERLEVEL9K_TIME_FORMAT="%D{%H:%M}"
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon context ssh root_indicator dir dir_writable vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(command_execution_time status laravel_version time)


#  ---------------------------------------------------------------------------
#
#  Description:  This file holds all my BASH configurations and aliases
#
#  Sections:
#  1.   Environment Configuration
#  2.   Make Terminal Better (remapping defaults and adding functionality)
#  3.   File and Folder Management
#  4.   Searching
#  5.   Process Management
#  6.   Networking
#  7.   System Operations & Information
#  8.   Web Development
#  9.   Reminders & Notes
#
#  ---------------------------------------------------------------------------

#   -------------------------------
#   1.  ENVIRONMENT CONFIGURATION
#   -------------------------------


#   Set Paths
#   ------------------------------------------------------------
export PATH="~/.composer/vendor/bin:$PATH"

#   Set Default Editor (change 'Nano' to the editor of your choice)
#   ------------------------------------------------------------
export EDITOR=/usr/bin/nano

#   Set default blocksize for ls, df, du
#   from this: http://hints.macworld.com/comment.php?mode=view&cid=24491
#   ------------------------------------------------------------
export BLOCKSIZE=1k


#   -----------------------------
#   2.  MAKE TERMINAL BETTER
#   -----------------------------

alias cp='cp -iv'                           # Preferred 'cp' implementation
alias mv='mv -iv'                           # Preferred 'mv' implementation
alias mkdir='mkdir -pv'                     # Preferred 'mkdir' implementation
alias ll='ls -lFah'                         # Preferred 'ls' implementation
alias less='less -FSRXc'                    # Preferred 'less' implementation
function cd() { builtin cd "$@"; ll; }      # Always list directory contents upon 'cd'
alias largest='ll -- **/*(.DOL[1,10])'      # List the 10 largest regular files recursively
alias dirsize='du -cksh * | sort -hr'       # List folders by their size
function duls () {
    paste <( du -hs -- "$@" | cut -f1 ) <( ls -ldFGAhp -- "$@" )
}                                           # List all the directory sizes, and append the results from 'll' command. Usage 'duls *'
alias cd..='cd ../'                         # Go back 1 directory level (for fast typers)
alias ..='cd ../'                           # Go back 1 directory level
alias ...='cd ../../'                       # Go back 2 directory levels
alias .3='cd ../../../'                     # Go back 3 directory levels
alias .4='cd ../../../../'                  # Go back 4 directory levels
alias .5='cd ../../../../../'               # Go back 5 directory levels
alias .6='cd ../../../../../../'            # Go back 6 directory levels
alias edit='subl'                           # edit:         Opens any file in sublime editor
alias f='open -a Finder ./'                 # f:            Opens current directory in MacOS Finder
alias ~="cd ~"                              # ~:            Go Home
alias c='clear'                             # c:            Clear terminal display
alias which='type -a'                       # which:        Find executables
alias path='echo -e ${PATH//:/\\n}'         # path:         Echo all executable Paths
alias show_options='shopt'                  # Show_options: display bash options settings
alias fix_stty='stty sane'                  # fix_stty:     Restore terminal settings when screwed up
alias cic='set completion-ignore-case On'   # cic:          Make tab-completion case-insensitive
function mcd () { mkdir -p "$1" && cd "$1"; }        # mcd:          Makes new Dir and jumps inside
function trash () { command mv "$@" ~/.Trash ; }     # trash:        Moves a file to the MacOS trash
function ql () { qlmanage -p "$*" >& /dev/null; }    # ql:           Opens any file in MacOS Quicklook Preview
alias DT='tee ~/Desktop/terminalOut.txt'    # DT:           Pipe content to file on MacOS Desktop

# apt-get update shortcut
function sysupgrade() {
    case "$(uname -s)" in
        Darwin)
            mas upgrade
            brew upgrade --force-bottle
            brew cu
            brew cleanup
            which composer > /dev/null 2>&1 && [[ -f "$HOME/.composer/composer.json" ]] && composer global update
            zprezto-update
        ;;

        Linux)
            sudo apt update
            sudo apt -V full-upgrade
            sudo apt autoremove
            which composer > /dev/null 2>&1 && [[ -f "$HOME/.composer/composer.json" ]] && composer global update
            zprezto-update
        ;;

        *)
        echo 'This Opreating system is not supported.'
        ;;
    esac
}

# Network tools

# Print the current public IP address
alias myip='dig +short myip.opendns.com @resolver1.opendns.com'

function ispeed() {
    ip="$(myip)"

    # Testing from home
    if [[ $ip =~ ^70\.52\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        speedtest --server 14854 --secure

    # Testing from IDF Office
    elif [[ $ip == 173.231.120.138 ]]; then
        # Test from Fibrenoire (Montreal, QC)
            speedtest --server 911 --secure

    else
        # Test from QTS Datacenters (Jersey City, NJ)
        speedtest --server 14854 --secure

        # Test from Keewaytinook Okimakanak (Toronto, ON)
        speedtest --server 4441 --secure
    fi

    # Use this to add any other condition : elif [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
}

# Prettyping
if (( $+commands[prettyping] )); then
  alias ping='prettyping --nolegend'
fi
alias arpscan='sudo arp-scan --localnet --bandwidth=4096000'

# MPV aliases
alias yt-formats='youtube-dl --list-formats' # Prints all available formats

#   Play an audio-only Youtube radio Live Stream
#   Youtube Live Streamsare usually MP4+AAC files streamed using the HLS protocol. Since there is only one format, it's easy to compare quality.
#   They're often available in 480p@128k, 720p@256k or 1080p@256k. Let's use the 720p, since the video is discarded.
#   Note : --ytdl-raw-options : Options without argument must include =.
function rlive-dry() { yt-formats "$1" && youtube-dl --get-format -f "bestaudio/best[height<1080]/best" "$1"; }
alias rlive='mpv --no-video --volume=80 --cache-secs=60 --cache-backbuffer=2048 --ytdl-format="bestaudio/best[height<1080]/best" --force-seekable=yes'

#   Play an audio-only Youtube pre-recorded set
#   Regular videos usually have DASH audio-only files, so we try to use those first.
#
function rrec-dry() { yt-formats "$1" && youtube-dl --get-format -f "bestaudio/best" "$1"; }
alias rrec='mpv --no-video --volume=80 --cache-secs=60 --cache-backbuffer=2048 --ytdl-format="bestaudio/best"'

# Laravel aliases
alias art='php artisan'
alias migrate='php artisan migrate'
alias fresh='php artisan migrate:fresh --seed'
alias cu='composer update'

# Node.js aliases
alias yu="yarn upgrade"

#   lr:  Full Recursive Directory Listing
#   ------------------------------------------
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'' | less'

#   mans:   Search manpage given in agument '1' for term given in argument '2' (case insensitive)
#           displays paginated result with colored search terms and two lines surrounding each hit.             Example: mans mplayer codec
#   --------------------------------------------------------------------
function mans () {
    man $1 | grep -iC2 --color=always $2 | less
}

#   showa: to remind yourself of an alias (given some part of it)
#   ------------------------------------------------------------
function showa () { /usr/bin/grep --color=always -i -a1 $@ ~/.zprezto/runcoms/zshrc | grep -v '^\s*$' | less -FSRXc ; }


#   -------------------------------
#   3.  FILE AND FOLDER MANAGEMENT
#   -------------------------------

function zipf () { zip -r "$1".zip "$1" ; }          # zipf:         To create a ZIP archive of a folder
function xzf () { tar -cJf "$1".tar.xz "$1" ; }      # xzf:          To create a tar.xz archive of a folder
alias numFiles='echo $(ls -1 | wc -l)'      # numFiles:     Count of non-hidden files in current dir
alias make1mb='mkfile 1m ./1MB.dat'         # make1mb:      Creates a file of 1mb size (all zeros)
alias make5mb='mkfile 5m ./5MB.dat'         # make5mb:      Creates a file of 5mb size (all zeros)
alias make10mb='mkfile 10m ./10MB.dat'      # make10mb:     Creates a file of 10mb size (all zeros)


#   extract:  Extract most know archives with one command
#   ---------------------------------------------------------
function extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.tar.xz)    tar xJf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/usr/local/google-cloud-sdk/path.zsh.inc' ]; then source '/usr/local/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/usr/local/google-cloud-sdk/completion.zsh.inc' ]; then source '/usr/local/google-cloud-sdk/completion.zsh.inc'; fi
